# On push to main, release a new version of the action using the version in package.json

name: Release Action

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Build
        run: |
          npm install
          npm run build

      # Generate a release version
      - name: Prepare Release Version
        id: version
        run: echo "::set-output name=VERSION::$(jq -r .version package.json)"
        shell: bash

      - name: Create Release
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RESPONSE=$(curl \
            -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/releases \
            -d '{
              "tag_name": "${{ steps.version.outputs.version  }}",
              "name": "Release ${{ steps.version.outputs.version  }}",
              "draft": false,
              "prerelease": false
            }')

            # Write UPLOAD_URL to the GITHUB_ENV
            # This makes it directly accessible in the next step.
          UPLOAD_URL=$(echo $RESPONSE | jq -r .upload_url | sed 's/{?name,label}//')
          echo "UPLOAD_URL=${UPLOAD_URL}" >> $GITHUB_ENV

      - name: Upload Release Asset
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ASSET_PATH="./dist/index.js"

          # Perform the upload
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Content-Type: application/javascript" \
            -H "Accept: application/vnd.github.v3+json" \
            --data-binary @"${ASSET_PATH}" \
            "${UPLOAD_URL}?name=index.js"
